import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { PrismaClient } from "@prisma/client";
import safeJsonStringify from "safe-json-stringify";
const prisma = new PrismaClient();

export async function getServerSideProps() {
  const post = await prisma.post.findMany({
    where: {
      categoria: { nombre_categoria: "interesar" },
    },
    include: {
      usuario: true,
      categoria: true,
    },
  });

  const entrevista = await prisma.post.findMany({
    where: {
      categoria: { nombre_categoria: "entrevista" },
    },
    include: {
      usuario: true,
      categoria: true,
    },
  });
  return {
    props: {
      post: JSON.parse(safeJsonStringify(post)),
      entrevista: JSON.parse(safeJsonStringify(entrevista)),
    },
  };
}

const Home = ({ post, entrevista }) => {
  console.log(post);
  console.log(entrevista);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Titulo Interesar</h1>
        <div>
          {post &&
            post.map((p) => {
              return (
                <div key={p.id}>
                  <div className="container">
                    <h2>
                      Nombre: <b>{p.nombre_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Tipo: <b>{p.tipo_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Imagen: <b>{p.url_post_img}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Descripcion: <b>{p.description_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Enlace: <b>{p.enlace_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Canal: <b>{p.enlace_canal_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Fecha: <b>{p.fecha_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Publicado por: <b>{p.usuario.nombre_usuario}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Categoria: <b>{p.categoria.nombre_categoria}</b>
                    </h2>
                  </div>
                </div>
              );
            })}
        </div>
        <h1>Titulo Entrevista</h1>
        <div className="card">
          {entrevista &&
            entrevista.map((e) => {
              return (
                <div key={e.id}>
                  <div className="container">
                    <h2>
                      Nombre: <b>{e.nombre_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Tipo: <b>{e.tipo_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Imagen: <b>{e.url_post_img}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Descripcion: <b>{e.description_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Enlace: <b>{e.enlace_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Canal: <b>{e.enlace_canal_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Fecha: <b>{e.fecha_post}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Publicado por: <b>{e.usuario.nombre_usuario}</b>
                    </h2>
                  </div>

                  <div className="container">
                    <h2>
                      Categoria: <b>{e.categoria.nombre_categoria}</b>
                    </h2>
                  </div>
                </div>
              );
            })}
        </div>
      </main>
    </div>
  );
};
export default Home;

// export async function getServerSideProps() {
//   try {
//     const MY_PLAYLIST = process.env.YOUTUBE_PLAYLIST_ID;
//     const API_KEY = process.env.YOUTUBE_API_KEY;
//     const REQUEST_URL = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${MY_PLAYLIST}&key=${API_KEY}&maxResults=6`;
//     const response = await fetch(REQUEST_URL);
//     const results = await response.json();

//     return {
//       props: {
//         results: results.items,
//       },
//     };
//   } catch (error) {

//     return { props: { success: false, error: "Error!" } };
//   }
// }
